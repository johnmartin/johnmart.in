#grid {
	.columns(@gridGutterWidth, @gridColumnWidth, @columns) {
		width: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns - 1));
	} 
	.gridColumn(@gridGutterWidth) {
		float: left;
		margin-left: @gridGutterWidth;
	}
	.height(@height, @position, @gutter, @space) {
		height: ( @height * @position ) + ( @gutter * @space );
	}
	.space(@gutter, @space) {
		margin-bottom: ( @gutter * @space );
	}
}

.grid {
	.row {
		.clearfix;
		margin-left: @gutter * -1;
		margin-top: @gutter;
		margin-bottom: @gutter;
	}
	[class*="span"] {
		float: left;
		margin-left: @gutter;
	}

	.span1 { #grid > .columns(@gutter, @width, 1); }
	.span2 { #grid > .columns(@gutter, @width, 2); }
	.span3 { #grid > .columns(@gutter, @width, 3); }
	.span4 { #grid > .columns(@gutter, @width, 4); }
	.span5 { #grid > .columns(@gutter, @width, 5); }
	.span6 { #grid > .columns(@gutter, @width, 6); }
	.span7 { #grid > .columns(@gutter, @width, 7); }
	.span8 { #grid > .columns(@gutter, @width, 8); }
	.span9 { #grid > .columns(@gutter, @width, 9); }
	.span10 { #grid > .columns(@gutter, @width, 10); }
	.span11 { #grid > .columns(@gutter, @width, 11); }
	.span12 { #grid > .columns(@gutter, @width, 12); }

	.space1 { #grid > .space(@gutter, 1); }
	.space2 { #grid > .space(@gutter, 2); }
	.space3 { #grid > .space(@gutter, 3); }
	.space4 { #grid > .space(@gutter, 4); }

	.h1 {
		#grid > .height(@height, 1, @gutter, 0);
		&.hs1 {
			#grid > .height(@height, 1, @gutter, 1);
		}
	}
	.h2 {
		#grid > .height(@height, 2, @gutter, 0);
		&.hs1 {
			#grid > .height(@height, 2, @gutter, 1);
		}
	}
	.h3 {
		#grid > .height(@height, 3, @gutter, 0);
	}
	.h4 {
		#grid > .height(@height, 4, @gutter, 0);
		&.hs1 {
			#grid > .height(@height, 4, @gutter, 1);
		}
		&.hs2 {
			#grid > .height(@height, 4, @gutter, 2);
		}
	}
	.h5 {
		#grid > .height(@height, 5, @gutter, 0);
		&.hs1 {
			#grid > .height(@height, 5, @gutter, 1);
		}
		&.hs2 {
			#grid > .height(@height, 5, @gutter, 2);
		}
	}
	.h6 {
		#grid > .height(@height, 6, @gutter, 0);
	}
}

.wrap {
	margin: 0 auto;
	width: (@width * @columns) + (@gutter * (@columns - 1));
}